{"version":3,"sources":["logo.svg","BubbleSort/Algorithm.js","BubbleSort/BubbleSort.js","SelectionSort/Algorithm.js","SelectionSort/SelectionSort.js","InsertionSort/InsertionSort.js","InsertionSort/Algorithm.js","MergeSort/Algorithm.js","MergeSort/MergeSort.js","QuickSort/Algorithm.js","QuickSort/QuickSort.js","Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getBubbleSortAnimations","array","animations","auxillaryArray","slice","N","length","i","j","push","swap","bubbleSort","javaScriptSortedArray","sort","a","b","console","log","firstArray","secondArray","arraysAreEqual","firstIndex","secondIndex","temp","SortingVisualizer","props","state","this","resetArray","min","max","Math","floor","random","setState","isColorChange","arrayBars","document","getElementsByClassName","color","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","setTimeout","backgroundColor","barIndex","newHeight","barStyle","height","Grid","item","xs","sm","md","Card","className","display","flexDirection","paddingBottom","CardContent","Typography","variant","align","gutterBottom","Box","pt","Paper","container","spacing","map","value","idx","key","Divider","CardActions","Button","size","onClick","React","Component","getSelectionSortAnimations","minIndex","selectionSort","Sortingssizer","barOneIndex","barTwoIndex","Sortingisizer","insertionSort","getInsertionSortAnimations","getMergeSortAnimations","auxiliaryArray","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","k","doMerge","Sortingmsizer","mergeSort","getQuickSortAnimations","quickSort","startIndex","endIndex","pivotIndex","pivot","partitionArray","Sortingqsizer","useStyles","makeStyles","theme","icon","marginRight","heroContent","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","card","cardMedia","cardContent","flexGrow","footer","Album","classes","Fragment","CssBaseline","AppBar","position","Toolbar","justifyContent","noWrap","Container","maxWidth","justify","App","mainPrimaryColor","blue","mainSecondaryColor","deepPurple","darkTheme","createMuiTheme","type","primary","main","secondary","ThemeProvider","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1457696e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export function getBubbleSortAnimations(array) {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  bubbleSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return animations;\n}\n\nfunction bubbleSort(auxillaryArray, animations) {\n  const N = auxillaryArray.length;\n  for (let i = 0; i < N - 1; i++) {\n    for (let j = 0; j < N - i - 1; j++) {\n      animations.push([j, j + 1]);\n      animations.push([j, j + 1]);\n      if (auxillaryArray[j] > auxillaryArray[j + 1]) {\n        animations.push([j, auxillaryArray[j + 1]]);\n        animations.push([j + 1, auxillaryArray[j]]);\n        swap(auxillaryArray, j, j + 1);\n      } else {\n        animations.push([-1, -1]);\n        animations.push([-1, -1]);\n      }\n    }\n  }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport { getBubbleSortAnimations } from \"./Algorithm.js\";\nimport \"./BubbleSort.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ANIMATION_SPEED_MS = 25;\nconst NUMBER_OF_ARRAY_BARS = 25;\nconst PRIMARY_COLOR = \"#90caf9\";\nconst SECONDARY_COLOR = \"red\";\n\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(2, 100));\n    }\n    this.setState({ array });\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange = i % 4 === 0 || i % 4 === 1;\n      const arrayBars = document.getElementsByClassName(\"bs__bar\");\n      if (isColorChange === true) {\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Card\n          className={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingBottom: 0,\n          }}\n        >\n          {/* <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  /> */}\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Bubble Sort\n            </Typography>\n            <Box pt={1}> </Box>\n            <Paper>\n              <div className=\"bs\">\n                <Grid container spacing={3}>\n                  {/* Chart */}\n                  <Grid item xs={12}>\n                    <div className=\"bs__container\">\n                      {array.map((value, idx) => (\n                        <div className=\"bs__pair\">\n                          <div\n                            className=\"bs__bar\"\n                            key={idx}\n                            style={{\n                              backgroundColor: PRIMARY_COLOR,\n                              height: `${value}px`,\n                            }}\n                          ></div>\n                        </div>\n                      ))}\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </Paper>\n            <Box pt={3}> </Box>\n\n            <Box align=\"left\">\n              <Typography variant=\"p\">Summary: </Typography>\n            </Box>\n            <Box align=\"left\">\n              <Typography variant=\"p\">\n                Repeatedly swapping the adjacent elements if they are in wrong\n                order.\n              </Typography>\n            </Box>\n\n            <Box pt={2} align=\"left\">\n              <Typography variant=\"small\">Worst case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Average case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Best case: O(n)</Typography>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            {/* <Box pr={0}></Box> */}\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.bubbleSort()}\n            >\n              Run\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.resetArray()}\n            >\n              Reset Array\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n","export function getSelectionSortAnimations(array) {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  selectionSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return animations;\n}\n\nfunction selectionSort(auxillaryArray, animations) {\n  const N = auxillaryArray.length;\n  for (let i = 0; i < N - 1; i++) {\n    let minIndex = i; //Finding minimum element in unsorted array\n    for (let j = i + 1; j < N; j++) {\n      animations.push([\"comparision1\", j, minIndex]);\n      animations.push([\"comparision2\", j, minIndex]);\n      if (auxillaryArray[j] < auxillaryArray[minIndex]) {\n        minIndex = j;\n      }\n    }\n    animations.push([\"swap\", minIndex, auxillaryArray[i]]);\n    animations.push([\"swap\", i, auxillaryArray[minIndex]]);\n    // Swap the found minimum element with the first element\n    swap(auxillaryArray, minIndex, i);\n  }\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport { getSelectionSortAnimations } from \"./Algorithm.js\";\nimport \"./SelectionSort.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ANIMATION_SPEED_MS = 25;\nconst NUMBER_OF_ARRAY_BARS = 25;\nconst PRIMARY_COLOR = \"#90caf9\";\nconst SECONDARY_COLOR = \"red\";\n\nexport default class Sortingssizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(2, 100));\n    }\n    this.setState({ array });\n  }\n\n  selectionSort() {\n    const animations = getSelectionSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] === \"comparision1\" ||\n        animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"ss__bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Card\n          className={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingBottom: 0,\n          }}\n        >\n          {/* <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  /> */}\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Selection Sort\n            </Typography>\n            <Box pt={1}> </Box>\n            <Paper>\n              <div className=\"ss\">\n                <Grid container spacing={3}>\n                  {/* Chart */}\n                  <Grid item xs={12}>\n                    <div className=\"ss__container\">\n                      {array.map((value, idx) => (\n                        <div className=\"ss__pair\">\n                          <div\n                            className=\"ss__bar\"\n                            key={idx}\n                            style={{\n                              backgroundColor: PRIMARY_COLOR,\n                              height: `${value}px`,\n                            }}\n                          ></div>\n                        </div>\n                      ))}\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </Paper>\n            <Box pt={3}> </Box>\n\n            <Box align=\"left\">\n              <Typography variant=\"p\">Summary: </Typography>\n            </Box>\n            <Box align=\"left\">\n              <Typography variant=\"p\">\n                Repeatedly find the minimum from unsorted part and put it in the\n                front.\n              </Typography>\n            </Box>\n\n            <Box pt={2} align=\"left\">\n              <Typography variant=\"small\">Worst case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Average case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Best case: O(n²)</Typography>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            {/* <Box pr={0}></Box> */}\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.selectionSort()}\n            >\n              Run\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.resetArray()}\n            >\n              Reset Array\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport { getInsertionSortAnimations } from \"./Algorithm.js\";\nimport \"./InsertionSort.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ANIMATION_SPEED_MS = 25;\nconst NUMBER_OF_ARRAY_BARS = 25;\nconst PRIMARY_COLOR = \"#90caf9\";\nconst SECONDARY_COLOR = \"red\";\n\nexport default class Sortingisizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(2, 100));\n    }\n    this.setState({ array });\n  }\n\n  insertionSort() {\n    const [animations, sortArray] = getInsertionSortAnimations(\n      this.state.array\n    );\n    for (let i = 0; i < animations.length; i++) {\n      const isColorChange =\n        animations[i][0] === \"comparision1\" ||\n        animations[i][0] === \"comparision2\";\n      const arrayBars = document.getElementsByClassName(\"is__bar\");\n      if (isColorChange === true) {\n        const color =\n          animations[i][0] === \"comparision1\" ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [temp, barOneIndex, barTwoIndex] = animations[i];\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [temp, barIndex, newHeight] = animations[i];\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Card\n          className={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingBottom: 0,\n          }}\n        >\n          {/* <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  /> */}\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Insertion Sort\n            </Typography>\n            <Box pt={1}> </Box>\n            <Paper>\n              <div className=\"is\">\n                <Grid container spacing={3}>\n                  {/* Chart */}\n                  <Grid item xs={12}>\n                    <div className=\"is__container\">\n                      {array.map((value, idx) => (\n                        <div className=\"is__pair\">\n                          <div\n                            className=\"is__bar\"\n                            key={idx}\n                            style={{\n                              backgroundColor: PRIMARY_COLOR,\n                              height: `${value}px`,\n                            }}\n                          ></div>\n                        </div>\n                      ))}\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </Paper>\n            <Box pt={3}> </Box>\n\n            <Box align=\"left\">\n              <Typography variant=\"p\">Summary: </Typography>\n            </Box>\n            <Box align=\"left\">\n              <Typography variant=\"p\">\n                Works the way we play cards in our hand. Take a card, then sort\n                it.\n              </Typography>\n            </Box>\n\n            <Box pt={2} align=\"left\">\n              <Typography variant=\"small\">Worst case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Average case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Best case: O(n)</Typography>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            {/* <Box pr={0}></Box> */}\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.insertionSort()}\n            >\n              Run\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.resetArray()}\n            >\n              Reset Array\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","export function getInsertionSortAnimations(array) {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  insertionSort(auxillaryArray, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return [animations, array];\n}\n\nfunction insertionSort(auxillaryArray, animations) {\n  const N = auxillaryArray.length;\n  for (let i = 1; i < N; i++) {\n    let key = auxillaryArray[i];\n    let j = i - 1;\n    animations.push([\"comparision1\", j, i]);\n    animations.push([\"comparision2\", j, i]);\n    while (j >= 0 && auxillaryArray[j] > key) {\n      animations.push([\"overwrite\", j + 1, auxillaryArray[j]]);\n      auxillaryArray[j + 1] = auxillaryArray[j];\n      j = j - 1;\n      if (j >= 0) {\n        animations.push([\"comparision1\", j, i]);\n        animations.push([\"comparision2\", j, i]);\n      }\n    }\n    animations.push([\"overwrite\", j + 1, key]);\n    auxillaryArray[j + 1] = key;\n  }\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","export function getMergeSortAnimations(array) {\n  const animations = [];\n  if (array.length <= 1) return array;\n  const auxiliaryArray = array.slice();\n  mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n  return animations;\n}\n\nfunction mergeSortHelper(\n  mainArray,\n  startIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  if (startIdx === endIdx) return;\n  const middleIdx = Math.floor((startIdx + endIdx) / 2);\n  mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n  mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n  doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n}\n\nfunction doMerge(\n  mainArray,\n  startIdx,\n  middleIdx,\n  endIdx,\n  auxiliaryArray,\n  animations\n) {\n  let k = startIdx;\n  let i = startIdx;\n  let j = middleIdx + 1;\n  while (i <= middleIdx && j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, j]);\n    if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    } else {\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }\n  while (i <= middleIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([i, i]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([i, i]);\n    // We overwrite the value at index k in the original array with the\n    // value at index i in the auxiliary array.\n    animations.push([k, auxiliaryArray[i]]);\n    mainArray[k++] = auxiliaryArray[i++];\n  }\n  while (j <= endIdx) {\n    // These are the values that we're comparing; we push them once\n    // to change their color.\n    animations.push([j, j]);\n    // These are the values that we're comparing; we push them a second\n    // time to revert their color.\n    animations.push([j, j]);\n    // We overwrite the value at index k in the original array with the\n    // value at index j in the auxiliary array.\n    animations.push([k, auxiliaryArray[j]]);\n    mainArray[k++] = auxiliaryArray[j++];\n  }\n}\n","import React from \"react\";\nimport { getMergeSortAnimations } from \"./Algorithm.js\";\nimport \"./MergeSort.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ANIMATION_SPEED_MS = 25;\nconst NUMBER_OF_ARRAY_BARS = 25;\nconst PRIMARY_COLOR = \"#90caf9\";\nconst SECONDARY_COLOR = \"red\";\n\nexport default class Sortingmsizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(2, 100));\n    }\n    this.setState({ array });\n  }\n\n  mergeSort() {\n    console.log(\"merge sort\");\n    const animations = getMergeSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"ms__bar\");\n      const isColorChange = i % 3 !== 2;\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Card\n          className={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingBottom: 0,\n          }}\n        >\n          {/* <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  /> */}\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Merge Sort\n            </Typography>\n            <Box pt={1}> </Box>\n            <Paper>\n              <div className=\"ms\">\n                <Grid container spacing={3}>\n                  {/* Chart */}\n                  <Grid item xs={12}>\n                    <div className=\"ms__container\">\n                      {array.map((value, idx) => (\n                        <div className=\"ms__pair\">\n                          <div\n                            className=\"ms__bar\"\n                            key={idx}\n                            style={{\n                              backgroundColor: PRIMARY_COLOR,\n                              height: `${value}px`,\n                            }}\n                          ></div>\n                        </div>\n                      ))}\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </Paper>\n            <Box pt={3}> </Box>\n\n            <Box align=\"left\">\n              <Typography variant=\"p\">Summary: </Typography>\n            </Box>\n            <Box align=\"left\">\n              <Typography variant=\"p\">\n                Divides input array in two halves, calls itself for the two\n                halves and then merges the two sorted halves\n              </Typography>\n            </Box>\n\n            <Box pt={2} align=\"left\">\n              <Typography variant=\"small\">Worst case: O(nlogn)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Average case: O(nlogn)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Best case: O(nlogn)</Typography>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            {/* <Box pr={0}></Box> */}\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.mergeSort()}\n            >\n              Run\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.resetArray()}\n            >\n              Reset Array\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","export function getQuickSortAnimations(array) {\n  let animations = [];\n  let auxillaryArray = array.slice();\n  quickSort(auxillaryArray, 0, auxillaryArray.length - 1, animations);\n  const javaScriptSortedArray = array.slice().sort((a, b) => a - b);\n  console.log(\n    \"sort works correctly? \",\n    arraysAreEqual(javaScriptSortedArray, auxillaryArray)\n  );\n  array = auxillaryArray;\n  return animations;\n}\n\ngetQuickSortAnimations([7, 2, 1, 6]);\n\nfunction quickSort(auxillaryArray, startIndex, endIndex, animations) {\n  let pivotIndex;\n  if (startIndex < endIndex) {\n    pivotIndex = partitionArray(\n      auxillaryArray,\n      startIndex,\n      endIndex,\n      animations\n    );\n    quickSort(auxillaryArray, startIndex, pivotIndex - 1, animations);\n    quickSort(auxillaryArray, pivotIndex + 1, endIndex, animations);\n  }\n}\n\nfunction partitionArray(auxillaryArray, startIndex, endIndex, animations) {\n  let pivot = auxillaryArray[endIndex];\n  let pivotIndex = startIndex;\n  for (let i = startIndex; i <= endIndex - 1; i++) {\n    animations.push([i, endIndex]);\n    animations.push([i, endIndex]);\n    if (auxillaryArray[i] <= pivot) {\n      //Swap these two heights\n      animations.push([i, auxillaryArray[pivotIndex]]);\n      animations.push([pivotIndex, auxillaryArray[i]]);\n      swap(auxillaryArray, i, pivotIndex);\n      pivotIndex++;\n    } else {\n      animations.push([-1, -1]);\n      animations.push([-1, -1]);\n    }\n    animations.push([-1, -1]);\n    animations.push([-1, -1]);\n  }\n  animations.push([-1, -1]);\n  animations.push([-1, -1]);\n  animations.push([-1, -1]);\n  animations.push([-1, -1]);\n  //Swap these two heights\n  animations.push([pivotIndex, auxillaryArray[endIndex]]);\n  animations.push([endIndex, auxillaryArray[pivotIndex]]);\n  swap(auxillaryArray, pivotIndex, endIndex);\n  return pivotIndex;\n}\n\nfunction swap(auxillaryArray, firstIndex, secondIndex) {\n  let temp = auxillaryArray[firstIndex];\n  auxillaryArray[firstIndex] = auxillaryArray[secondIndex];\n  auxillaryArray[secondIndex] = temp;\n}\n\nfunction arraysAreEqual(firstArray, secondArray) {\n  if (firstArray.length !== secondArray.length) {\n    return false;\n  }\n  for (let i = 0; i < firstArray.length; i++) {\n    if (firstArray[i] !== secondArray[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport { getQuickSortAnimations } from \"./Algorithm.js\";\nimport \"./QuickSort.css\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst ANIMATION_SPEED_MS = 25;\nconst NUMBER_OF_ARRAY_BARS = 25;\nconst PRIMARY_COLOR = \"#90caf9\";\nconst SECONDARY_COLOR = \"red\";\n\nexport default class Sortingqsizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      array: [],\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(2, 100));\n    }\n    this.setState({ array });\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n    for (let i = 0; i < animations.length - 1; i++) {\n      const isColorChange = i % 6 === 0 || i % 6 === 1;\n      const arrayBars = document.getElementsByClassName(\"qs__bar\");\n      if (isColorChange === true) {\n        const color = i % 6 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        const [barOneIndex, barTwoIndex] = animations[i];\n        if (barOneIndex === -1) {\n          continue;\n        }\n        const barOneStyle = arrayBars[barOneIndex].style;\n        const barTwoStyle = arrayBars[barTwoIndex].style;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        const [barIndex, newHeight] = animations[i];\n        if (barIndex === -1) {\n          continue;\n        }\n        const barStyle = arrayBars[barIndex].style;\n        setTimeout(() => {\n          barStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  render() {\n    const { array } = this.state;\n\n    return (\n      <Grid item xs={12} sm={6} md={4}>\n        <Card\n          className={{\n            height: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            paddingBottom: 0,\n          }}\n        >\n          {/* <CardMedia\n                    className={classes.cardMedia}\n                    image=\"https://source.unsplash.com/random\"\n                    title=\"Image title\"\n                  /> */}\n          <CardContent>\n            <Typography variant=\"h6\" align=\"center\" gutterBottom>\n              Quick Sort\n            </Typography>\n            <Box pt={1}> </Box>\n            <Paper>\n              <div className=\"qs\">\n                <Grid container spacing={3}>\n                  {/* Chart */}\n                  <Grid item xs={12}>\n                    <div className=\"qs__container\">\n                      {array.map((value, idx) => (\n                        <div className=\"qs__pair\">\n                          <div\n                            className=\"qs__bar\"\n                            key={idx}\n                            style={{\n                              backgroundColor: PRIMARY_COLOR,\n                              height: `${value}px`,\n                            }}\n                          ></div>\n                        </div>\n                      ))}\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n            </Paper>\n            <Box pt={3}> </Box>\n\n            <Box align=\"left\">\n              <Typography variant=\"p\">Summary: </Typography>\n            </Box>\n            <Box align=\"left\">\n              <Typography variant=\"p\">\n                Picks an element as pivot and partitions the given array around\n                the picked pivot.\n              </Typography>\n            </Box>\n\n            <Box pt={2} align=\"left\">\n              <Typography variant=\"small\">Worst case: O(n²)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Average case: O(nlogn)</Typography>\n            </Box>\n            <Box pt={0} align=\"left\">\n              <Typography variant=\"small\">Best case: O(nlogn)</Typography>\n            </Box>\n          </CardContent>\n          <Divider />\n          <CardActions>\n            {/* <Box pr={0}></Box> */}\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.quickSort()}\n            >\n              Run\n            </Button>\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={() => this.resetArray()}\n            >\n              Reset Array\n            </Button>\n          </CardActions>\n        </Card>\n      </Grid>\n    );\n  }\n}\n\n// From https://stackoverflow.com/questions/4959975/generate-random-number-between-two-numbers-in-javascript\nfunction randomIntFromInterval(min, max) {\n  // min and max included\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nfunction arraysAreEqual(arrayOne, arrayTwo) {\n  if (arrayOne.length !== arrayTwo.length) return false;\n  for (let i = 0; i < arrayOne.length; i++) {\n    if (arrayOne[i] !== arrayTwo[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n","import React from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport CameraIcon from \"@material-ui/icons/PhotoCamera\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AllInclusiveIcon from \"@material-ui/icons/AllInclusive\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Link from \"@material-ui/core/Link\";\nimport BubbleSort from \"../BubbleSort/BubbleSort.js\";\nimport SelectionSort from \"../SelectionSort/SelectionSort.js\";\nimport InsertionSort from \"../InsertionSort/InsertionSort.js\";\n\nimport MergeSort from \"../MergeSort/MergeSort.js\";\nimport QuickSort from \"../QuickSort/QuickSort.js\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles((theme) => ({\n  icon: {\n    marginRight: theme.spacing(2),\n  },\n  heroContent: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(8, 0, 6),\n  },\n  heroButtons: {\n    marginTop: theme.spacing(4),\n  },\n  cardGrid: {\n    paddingTop: theme.spacing(8),\n    paddingBottom: theme.spacing(8),\n  },\n  card: {\n    height: \"100%\",\n    display: \"flex\",\n    flexDirection: \"column\",\n  },\n  cardMedia: {\n    paddingTop: \"56.25%\", // 16:9\n  },\n  cardContent: {\n    flexGrow: 1,\n  },\n  footer: {\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(6),\n  },\n}));\n\nconst cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n\nexport default function Album() {\n  const classes = useStyles();\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <AppBar position=\"relative\">\n        <Toolbar style={{ justifyContent: \"center\" }}>\n          <AllInclusiveIcon className={classes.icon} />\n          <Typography variant=\"h6\" color=\"inherit\" noWrap>\n            Sorting Visualizer\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <main style={{ backgroundColor: \"rgb(36, 36, 36)\" }}>\n        <Container\n          className={classes.cardGrid}\n          maxWidth=\"lg\"\n          style={{ backgroundColor: \"rgb(36, 36, 36)\" }}\n        >\n          {/* End hero unit */}\n          <Grid\n            container\n            spacing={4}\n            justify=\"center\"\n            style={{ backgroundColor: \"rgb(36, 36, 36)\" }}\n          >\n            <BubbleSort />\n            <SelectionSort />\n            <InsertionSort />\n            <MergeSort />\n            <QuickSort />\n          </Grid>\n        </Container>\n      </main>\n      {/* Footer */}\n      <footer className={classes.footer}>\n        <Typography variant=\"h6\" align=\"center\" gutterBottom>\n          abrielequdsi\n        </Typography>\n      </footer>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Home from \"./Home/Home.js\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport {\n  orange,\n  blue,\n  lightBlue,\n  deepPurple,\n  deepOrange,\n} from \"@material-ui/core/colors\";\n\nfunction App() {\n  const palletType = \"dark\";\n  const mainPrimaryColor = blue[200];\n  const mainSecondaryColor = deepPurple[500];\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      },\n    },\n  });\n\n  return (\n    <div className=\"App\">\n      <ThemeProvider theme={darkTheme}>\n        <Home />\n      </ThemeProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}